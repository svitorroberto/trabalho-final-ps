final boolean isContinuousIntegration = Boolean.valueOf(System.getenv('CI') ?: 'false')

buildscript {
    ext {
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'ufg.inf.si'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

springBoot {
    buildInfo()
}

task limparJavaDoc(type: Delete, group: 'documentation') {
    delete ['./docs/JavaDoc']
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
    destinationDir = file('./docs/JavaDoc')
}

javadoc.dependsOn limparJavaDoc

test {
    if (isContinuousIntegration) {
        reports.junitXml.destination = file('shippable/testresults')
    } else {
        reports.junitXml.destination = file('build/test-results')
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.session:spring-session')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-hibernate5')

    runtime('com.h2database:h2')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4')
    testCompile('org.spockframework:spock-spring:1.1-groovy-2.4')
}
